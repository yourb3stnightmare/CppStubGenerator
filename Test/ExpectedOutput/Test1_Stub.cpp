//********************************************************************************
// Automatically generated by CppStubGenerator
//********************************************************************************

#include "Test1_Stub.h"

bool Test1_Stub::Func1::called = false;
int Test1_Stub::Func1::callCount = 0;
void Func1()
{
    Test1_Stub::Func1::called = true;
    Test1_Stub::Func1::callCount++;
}

bool Test1_Stub::Func2::called = false;
int Test1_Stub::Func2::callCount = 0;
int Test1_Stub::Func2::val = int(0);
void Func2(int val)
{
    Test1_Stub::Func2::called = true;
    Test1_Stub::Func2::callCount++;
    Test1_Stub::Func2::val = val;
}

bool Test1_Stub::Func2::called = false;
int Test1_Stub::Func2::callCount = 0;
bool Test1_Stub::Func2::retVal = false;
char* Test1_Stub::Func2::str = (char*)(0);
int Test1_Stub::Func2::strSize = int(0);
bool Func2(const char* str)
{
    Test1_Stub::Func2::called = true;
    Test1_Stub::Func2::callCount++;
    memcpy(Test1_Stub::Func2::str, str, Test1_Stub::Func2::strSize);
    return Test1_Stub::Func2::retVal;
}

bool Test1_Stub::Func3::called = false;
int Test1_Stub::Func3::callCount = 0;
int Test1_Stub::Func3::retVal = int(0);
int Test1_Stub::Func3::outParam = int(0);
int Func3(int& outParam)
{
    Test1_Stub::Func3::called = true;
    Test1_Stub::Func3::callCount++;
    outParam = Test1_Stub::Func3::outParam;
    return Test1_Stub::Func3::retVal;
}

bool Test1_Stub::Method1::called = false;
int Test1_Stub::Method1::callCount = 0;
void TestClass::Method1()
{
    Test1_Stub::Method1::called = true;
    Test1_Stub::Method1::callCount++;
}

bool Test1_Stub::Method2::called = false;
int Test1_Stub::Method2::callCount = 0;
bool Test1_Stub::Method2::retVal = false;
char* Test1_Stub::Method2::inPtr = (char*)(0);
int Test1_Stub::Method2::inPtrSize = int(0);
char* Test1_Stub::Method2::outPtr = (char*)(0);
int Test1_Stub::Method2::outPtrSize = int(0);
int Test1_Stub::Method2::inRef = int(0);
short Test1_Stub::Method2::outRef = short(0);
bool TestClass::Method2(const char* inPtr, char* outPtr, const int& inRef, short& outRef)
{
    Test1_Stub::Method2::called = true;
    Test1_Stub::Method2::callCount++;
    memcpy(Test1_Stub::Method2::inPtr, inPtr, Test1_Stub::Method2::inPtrSize);
    memcpy(outPtr, Test1_Stub::Method2::outPtr, Test1_Stub::Method2::outPtrSize);
    Test1_Stub::Method2::inRef = inRef;
    outRef = Test1_Stub::Method2::outRef;
    return Test1_Stub::Method2::retVal;
}
